{"version":3,"sources":["carousel.js"],"names":["window","document","navigator","_this","this","werror","console","log","carousels","mmcival","nomatchival","onMatchMediaChange","e","matches","clearTimeout","c","hasMediaQueries","changeMedia","isTouch","maxTouchPoints","msMaxTouchPoints","h","getByClass","el","cls","one","getElementsByClassName","length","undefined","getByTag","tag","getElementsByTagName","mkel","createElement","attr","keys","Object","i","setAttribute","each","what","cb","cbres","call","addMediaQuery","mq","mediaQueries","matchMedia","addListener","setPercentTouchThreshold","val","conf","w","outerWidth","px","Math","abs","round","touchthreshold","Carousel","_this2","config","delay","transition","swipeRubberBand","_ds","dataset","_cfg","push","element","carouselIndicators","indicators","items","ivalId","currPos","_hasmedia","_percentTouchThreshold","staticTextElem","classList","add","slider","tmp","Item","pos","carouselDelay","parseInt","carouselTransition","carouselTouchThreshold","carouselRubberbandSwipe","load","play","prototype","sliderAnimate","on","remove","my","setTimeout","next","pause","goto","next_prev","_loadIfNecessary","setIndicator","carouselPos","activate","_this3","item","size","isLoaded","_setupTouchEvents","_this4","x","y","startX","_","getEvent","changedTouches","initStart","clientX","clientY","abort","touchendIval","addEventListener","te","diff","requestAnimationFrame","removeProperty","style","startDiff","left","offsetLeft","nleft","preventDefault","touchMove","setTouchMove","useIndicators","_this5","inds","ind","class","forEach","appendChild","Indicator","btn","index","deActivate","clickBack","owner","_this6","img","src","mediaSizes","href","carouselHref","position","hasImg","carousel","res","location","defaultSrc","carouselSrc","_collectMediaSizes","sort","k","display","_this7","st","removeEventListener","_cb","cursor","m","sizesrc","a","match","sizes","slen","str","_setSrc","_this8","onload","backgroundImage","cs"],"mappings":"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","file":"carousel.min.js","sourcesContent":["/*\n  Author: Pontus Östlund <https://profiles.google.com/poppanator>\n*/\n\n// jshint esversion: 6, undef: true, unused: true\n/* global window, document, setTimeout, clearTimeout, requestAnimationFrame */\n\n\n(function(window, document, navigator) {\n  'use strict';\n\n  const werror = window.console.log;\n\n  // Storage for all created carousels.\n  const carousels = [];\n\n  // Storage for match media sizes.\n  const mediaQueries = {};\n\n  // When we get a media match we don't act upon it immediately but only\n  // execute on the last one.\n  // This is the interval ids for matches and no\n  // matches. The latter is needed if no media is matched, in which case we\n  // need to set the default media.\n  let mmcival, nomatchival;\n  const onMatchMediaChange = function(e) {\n    if (e.matches) {\n      // werror('>>> Media change: ', e.media);\n      h.each(carousels, c => {\n        if (c.hasMediaQueries()) {\n          if (mmcival) {\n            clearTimeout(mmcival);\n          }\n\n          if (nomatchival) {\n            clearTimeout(nomatchival);\n          }\n\n          mmcival = setTimeout(() => {\n            c.changeMedia(e.media);\n            mmcival = null;\n            nomatchival = null;\n          }, 10);\n        }\n      });\n    }\n    else if (!mmcival) {\n      if (nomatchival) {\n        clearTimeout(nomatchival);\n      }\n      nomatchival = setTimeout(() => {\n        h.each(carousels, c => {\n          if (c.hasMediaQueries()) {\n            c.changeMedia();\n          }\n        });\n        mmcival = null;\n        nomatchival = null;\n      }, 10);\n    }\n  };\n\n  const isTouch = (('ontouchstart' in window)       ||\n                   (navigator.maxTouchPoints   > 0) ||\n                   (navigator.msMaxTouchPoints > 0));\n\n\n  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n   |                                                                         |\n   *                                Helpers                                  *\n   |                                                                         |\n   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n  const h = {\n    // Get elements by class name\n    getByClass: function(el, cls, one) {\n      const e = el.getElementsByClassName(cls);\n\n      if (one && e.length) {\n        return e[0];\n      }\n\n      return e.length && e || undefined;\n    },\n\n    // Get elements by tag name\n    getByTag: function(el, tag, one) {\n      const e = el.getElementsByTagName(tag);\n\n      if (one) {\n        if (e && e.length) {\n          return e[0];\n        }\n      }\n\n      return e;\n    },\n\n    // Create element\n    mkel: function(tag, attr) {\n      var e = document.createElement(tag);\n\n      if (attr) {\n        const keys = Object.keys(attr);\n        for (let i = 0; i < keys.length; i++) {\n          e.setAttribute(keys[i], attr[keys[i]]);\n        }\n      }\n\n      return e;\n    },\n\n    // Iterate over what and call cb on each iteration. If cb returns\n    // false the loop is escaped.\n    each: (what, cb) => {\n      let cbres;\n      for (let i = 0; i < what.length; i++) {\n        cbres = cb.call(this, what[i]);\n        if (cbres === false) {\n          break;\n        }\n      }\n    },\n\n    // Add media query to check in window.matchMedia\n    addMediaQuery: (mq) => {\n      if (!mediaQueries[mq]) {\n        mediaQueries[mq] = true;\n        window.matchMedia(mq).addListener(onMatchMediaChange);\n      }\n    },\n\n    // Calculate the swipe threshold in percent if that's requested\n    // FIXME: This does not work as expected in an actual iPhone.\n    setPercentTouchThreshold: function (val, conf) {\n      const w = window.outerWidth;\n      const px = Math.abs(Math.round(w / (100/val)));\n      conf.touchthreshold = px;\n    }\n  };\n\n\n  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n   |                                                                         |\n   *                                Carousel                                 *\n   |                                                                         |\n   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n  /*\n    Creates a new Carousel object\n    @param HTMLElement el\n  */\n  const Carousel = function(el) {\n    this.config = {\n      delay:          8000,\n      transition:     'slide',\n      touchthreshold: 80,\n      // This must at least be 1 (no rubber band effect)\n      swipeRubberBand: 1\n    };\n\n    const _ds = el.dataset,\n      _cfg = this.config;\n\n    carousels.push(this);\n\n    this.element       = el;\n    this.useIndicators = _ds.carouselIndicators !== undefined;\n    // Storage for Carousel.Indicator objects\n    this.indicators    = [];\n    this.slider        = h.getByClass(el, 'carousel-slider', true);\n    // Storage for Carousel.Item objects\n    this.items         = [];\n    // Interval ID for transitions between items\n    this.ivalId        = null;\n    // Current item\n    this.currPos       = 0;\n    // Flag for if multiple image sources are used.\n    // -1 = not checked\n    //  0 = no\n    //  1 = yes\n    this._hasmedia     = -1;\n\n    // If non-zero the swipe threshold is in percentage of the screen width\n    this._percentTouchThreshold = 0;\n\n    this.staticTextElem = h.getByClass(el, 'carousel-static-text', true);\n\n    if (isTouch) {\n      this.element.classList.add('carousel-is-touch');\n    }\n\n    let items = h.getByClass(this.slider, 'carousel-item');\n    let pos = 0, tmp;\n\n    h.each(items, el => {\n      this.items.push(new Carousel.Item(el, pos++, this));\n    });\n\n    if (_ds.carouselDelay) {\n      _cfg.delay = parseInt(_ds.carouselDelay, 10);\n    }\n\n    if (_ds.carouselTransition) {\n      _cfg.transition = _ds.carouselTransition;\n    }\n\n    if (isTouch && _ds.carouselTouchThreshold) {\n      tmp = _ds.carouselTouchThreshold;\n      if (tmp[tmp.length - 1] === '%') {\n        this._percentTouchThreshold = parseInt(tmp, 10);\n        h.setPercentTouchThreshold(this._percentTouchThreshold, _cfg);\n      }\n      else {\n        _cfg.touchthreshold = parseInt(tmp, 10);\n      }\n    }\n\n    if (_ds.carouselRubberbandSwipe) {\n      tmp = parseFloat(_ds.carouselRubberbandSwipe, 10);\n\n      if (tmp > 1) {\n        _cfg.swipeRubberBand = tmp;\n      }\n    }\n\n    if (this.items.length) {\n      this.items[0].load();\n      this.items[0].activate();\n    }\n\n    if (this.items.length > 1) {\n      this.items[1].load();\n      this._makeIndicators();\n    }\n\n    if (isTouch) {\n      this._setupTouchEvents();\n    }\n\n    if (this.items.length > 1) {\n      this.play();\n    }\n  };\n\n  /*\n    Toggle add/remove the animate class on the slider\n  */\n  Carousel.prototype.sliderAnimate = function(on) {\n    if (on) {\n      this.slider.classList.add('animate');\n    }\n    else {\n      this.slider.classList.remove('animate');\n    }\n  };\n\n  /*\n    Start the auto play\n  */\n  Carousel.prototype.play = function() {\n    if (this.ivalId) {\n      clearTimeout(this.ivalId);\n    }\n\n    const my = this;\n\n    this.ivalId = setTimeout(() => {\n      my.next();\n      my.play();\n    }, this.config.delay);\n  };\n\n  /*\n    Pause the auto play\n  */\n  Carousel.prototype.pause = function() {\n    clearTimeout(this.ivalId);\n    this.sliderAnimate(false);\n  };\n\n  /*\n    Move to the next item\n  */\n  Carousel.prototype.next = function() {\n    this.currPos += 1;\n    if (this.currPos >= this.items.length) {\n      this.currPos = 0;\n    }\n\n    this.goto(this.currPos);\n  };\n\n  /*\n    Goto the item at @pos\n  */\n  Carousel.prototype.goto = function(pos) {\n    if (pos < 0) {\n      pos = this.items.length - 1;\n    }\n    else if (pos >= this.items.length) {\n      pos = 0;\n    }\n\n    const next_prev = pos < this.currPos ? pos - 1 : pos + 1;\n\n    // werror('curr', pos, ' next', next_prev);\n\n    clearTimeout(this.ivalId);\n\n    this.sliderAnimate(true);\n    this._loadIfNecessary(pos);\n    this._loadIfNecessary(next_prev);\n    this.setIndicator(pos);\n    this.slider.dataset.carouselPos = pos;\n    this.currPos = pos;\n    this.items[pos].activate();\n    this.play();\n  };\n\n  /*\n    Check if any of the images in the items has multiple images for different\n    device widths\n  */\n  Carousel.prototype.hasMediaQueries = function() {\n    if (this._hasmedia !== -1) {\n      return !!this._hasmedia;\n    }\n\n    h.each(this.items, item => {\n      if (item.hasMediaQueries) {\n        this._hasmedia = 1;\n        return false;\n      }\n    });\n\n    if (this._hasmedia === -1) {\n      this._hasmedia = 0;\n    }\n\n    return !!this._hasmedia;\n  };\n\n\n  /*\n    Media has changes, change images in the items if neccessary\n  */\n  Carousel.prototype.changeMedia = function(size) {\n    if (this._percentTouchThreshold) {\n      h.setPercentTouchThreshold(this._percentTouchThreshold, this.config);\n    }\n\n    h.each(this.items, item => {\n      if (item.hasMediaQueries) {\n        item.changeMedia(size);\n      }\n    });\n  };\n\n\n  /*\n    Load the image in item @pos if it's not already loaded\n  */\n  Carousel.prototype._loadIfNecessary = function(pos) {\n    if (pos >= 0 && pos < this.items.length) {\n      if (!this.items[pos].isLoaded) {\n        // werror('_loadIfNecessary(', pos, this.currPos, ')');\n        this.items[pos].load();\n      }\n    }\n  };\n\n\n  /*\n    Setup touch events\n  */\n  Carousel.prototype._setupTouchEvents = function() {\n    // Used to store the touch start/drag positions\n    const x = {\n      x: 0,\n      y: 0,\n      startX: 0\n    };\n\n    const _ = this;\n\n    const getEvent = function(e) {\n      return e.changedTouches[0];\n    };\n\n    const initStart = function(e) {\n      x.x = e.clientX;\n      x.y = e.clientY;\n      x.startX = e.clientX;\n    };\n\n    const slider = this.slider;\n\n    let abort = false;\n    let touchendIval;\n\n    slider.addEventListener('touchstart', e => {\n      if (touchendIval) {\n        clearTimeout(touchendIval);\n      }\n      const te = getEvent(e);\n      initStart(te);\n      this.element.classList.add('carousel-is-touchdrag');\n      _.pause();\n    }, false);\n\n    slider.addEventListener('touchend', e => {\n      touchendIval = setTimeout(() => {\n        _.element.classList.remove('carousel-is-touchdrag');\n      }, 1000);\n\n\n      // The rotation has occured in touchmove so abort.\n      if (abort) {\n        abort = false;\n        return;\n      }\n\n      const te = getEvent(e);\n      let diff = te.clientX - x.x;\n\n      if (Math.abs(diff) < _.config.touchthreshold) {\n        _.sliderAnimate(true);\n        requestAnimationFrame(() => {\n          slider.style.removeProperty('left');\n        });\n      }\n\n      _.play();\n\n    }, false);\n\n    slider.addEventListener('touchcancel', () => {\n      // werror('Touch cancel');\n      _.element.classList.remove('carousel-is-touchdrag');\n      slider.style.removeProperty('left');\n      _.play();\n    }, false);\n\n    const touchMove = (e) => {\n      const te        = getEvent(e);\n      const diff      = te.clientX - x.x;\n      const startDiff = te.clientX - x.startX;\n      const left      = slider.offsetLeft;\n      x.x = te.clientX;\n      let nleft = left+(diff/(_.config.swipeRubberBand||1));\n\n      if (Math.abs(startDiff) > _.config.touchthreshold) {\n        e.preventDefault();\n        abort = true;\n\n        slider.style.removeProperty('left');\n        slider.removeEventListener('touchmove', touchMove, false);\n\n        if (diff > 0) {\n          _._loadIfNecessary(_.currPos-1);\n          _.goto(_.currPos-1);\n        }\n        else if (diff < 0) {\n          _._loadIfNecessary(_.currPos+1);\n          _.goto(_.currPos+1);\n        }\n\n        setTimeout(() => {\n          initStart(te);\n          setTouchMove();\n        }, 600);\n\n        return false;\n      }\n\n      slider.style.left = nleft + 'px';\n    };\n\n    const setTouchMove = () => {\n      slider.addEventListener('touchmove', touchMove, false);\n    };\n\n    setTouchMove();\n  };\n\n  /*\n    Create the indicators\n  */\n  Carousel.prototype._makeIndicators = function() {\n    if (!this.useIndicators || this.items.length < 2) {\n      return;\n    }\n\n    let ind = h.getByClass(this.element, 'carousel-indicators', true);\n    const inds = [];\n\n    if (!ind) {\n      ind = h.mkel('div', { class: 'carousel-indicators' });\n    }\n\n    this.items.forEach(() => {\n      const i = new Carousel.Indicator(this, inds.length);\n      ind.appendChild(i.btn);\n      inds.push(i);\n    });\n\n    inds[0].activate();\n\n    this.element.appendChild(ind);\n    this.indicators = inds;\n  };\n\n  /*\n    Activate the indicator at position @index\n  */\n  Carousel.prototype.setIndicator = function(index) {\n    if (!this.useIndicators || this.items.length < 2) {\n      return;\n    }\n\n    if (index === undefined) {\n      index = this.currPos;\n    }\n\n    this.currPos = index;\n\n    this.indicators.forEach(ind => {\n      ind.deActivate();\n    });\n\n    this.indicators[index].activate();\n  };\n\n  /*\n    If defined and a function it will be called on eventual clicks.\n    Return false to abort click.\n\n    Carousel.clickBack = function(item) {\n      // To something...\n      return false;\n    };\n  */\n  Carousel.clickBack = null;\n\n  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n   |                                                                         |\n   *                            Carousel.Item                                *\n   |                                                                         |\n   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n  Carousel.Item = function(el, pos, owner) {\n    this.mediaQueries    = {};\n    this.hasMediaQueries = false;\n    this.img             = h.getByTag(el, 'img', true);\n    this.element         = el;\n    this.isLoaded        = false;\n    this.src             = null;\n    this.mediaSizes      = null;\n    this.href            = el.dataset.carouselHref;\n    this.position        = pos;\n    this.hasImg          = this.img.length === undefined;\n    this.carousel        = owner;\n\n    this.element.setAttribute('data-carousel-position', pos);\n\n    if (this.href) {\n      el.addEventListener('click', (e) => {\n        e.preventDefault();\n        if (typeof Carousel.clickBack === 'function') {\n          const res = Carousel.clickBack(this);\n          if (res === false) {\n            return;\n          }\n        }\n        document.location.href = this.href;\n      }, true);\n    }\n\n    if (this.hasImg) {\n      this.defaultSrc = this.img.dataset.carouselSrc;\n      this._collectMediaSizes();\n\n      const keys = Object.keys(this.mediaQueries).sort();\n      let k;\n\n      for (let i = 0; i < keys.length; i++) {\n        k = keys[i];\n\n        if (window.matchMedia(k).matches) {\n          this.src = this.mediaQueries[k];\n        }\n      }\n\n      if (!this.src) {\n        this.src = this.img.dataset.carouselSrc;\n      }\n\n      this.img.style.display = 'none';\n    }\n  };\n\n  Carousel.Item.prototype.activate = function() {\n    const st = this.carousel.staticTextElem;\n    if (st) {\n      const cb = () => {\n        document.location.href = this.href;\n      };\n      if (st._cb) {\n        st.removeEventListener('click', st._cb);\n      }\n      if (this.href) {\n        st.addEventListener('click', cb, false);\n        st._cb = cb;\n        st.style.cursor = 'pointer';\n      }\n      else {\n        st.style.cursor = 'default';\n      }\n    }\n  };\n\n  /*\n    Load the image matching the media size @size\n  */\n  Carousel.Item.prototype.changeMedia = function(size) {\n    const src = this.mediaQueries[size];\n    this.src = src || this.defaultSrc;\n\n    if (this.isLoaded) {\n      this.load();\n    }\n  };\n\n\n  /*\n    Collect eventual multiple media size image sources\n  */\n  Carousel.Item.prototype._collectMediaSizes = function() {\n    let m, sizes = [], sizesrc = {};\n\n    for (let a in this.img.dataset){\n      m = a.match(/Mq-(\\d+)$/);\n\n      if (m) {\n        this.hasMediaQueries = true;\n        m = parseInt(m[1]);\n        sizes.push(m);\n        sizesrc[m] = this.img.dataset[a];\n      }\n    }\n\n    let slen = sizes.length;\n\n    if (slen) {\n      let a, str;\n      sizes.sort();\n\n      for (let i = 0; i < slen; i++) {\n        a   = sizes[i];\n        str = `(min-width: ${a+1}px)`;\n\n        this.mediaQueries[str] = sizesrc[a];\n        h.addMediaQuery(str);\n      }\n\n      this.mediaSizes = sizes;\n    }\n  };\n\n  /*\n    Load the current image source.\n  */\n  Carousel.Item.prototype.load = function() {\n    if (this.hasImg) {\n      this._setSrc(this.src);\n    }\n  };\n\n  /*\n    Set the src attribute to @src and add it as background image on the\n    item when the image is loaded.\n  */\n  Carousel.Item.prototype._setSrc = function(src) {\n    if (this.hasImg) {\n      this.img.setAttribute('src', src);\n      this.img.onload = () => {\n        this.element.style.backgroundImage = `url(${src})`;\n        this.isLoaded = true;\n      };\n    }\n  };\n\n  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n   |                                                                         |\n   *                          Carousel.Indicator                             *\n   |                                                                         |\n   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n  Carousel.Indicator = function(owner, index) {\n    const _ = this;\n    this.index = index;\n    this.owner = owner;\n    this.btn = h.mkel('a', { class: 'carousel-indicator', href: '#carousel-' + index });\n    this.btn.appendChild(h.mkel('span', { class: 'carousel-indicator-inner' }));\n    this.btn.addEventListener('click', (e) => {\n      e.preventDefault();\n      _.owner.goto(_.index);\n      return false;\n    }, true);\n  };\n\n  /*\n    Activate this indicator\n  */\n  Carousel.Indicator.prototype.activate = function() {\n    this.btn.classList.add('carousel-indicator-active');\n  };\n\n  /*\n    Deactivate this indicator\n  */\n  Carousel.Indicator.prototype.deActivate = function() {\n    this.btn.classList.remove('carousel-indicator-active');\n  };\n\n  window.addEventListener('DOMContentLoaded', () => {\n    const cs = h.getByClass(document, 'carousel');\n\n    if (cs && cs.length) {\n      h.each(cs, el => {\n        new Carousel(el);\n      });\n    }\n  });\n\n  window.Carousel = Carousel;\n\n}(window, document, window.navigator));\n"]}